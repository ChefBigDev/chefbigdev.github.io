const cWidth=200;const cHeight=100;const particle_amount=7;const c=document.getElementById('sparticles');c.width=cWidth;c.height=cHeight;const ctx=c.getContext("2d");const particles=[];class Particle{constructor(id){this.id=id;this.getPos();this.size=this.getSize();this.color=this.getColor();this.speed=this.getSpeed();this.setEndPoint()}getSpeed(){return Math.floor(Math.random()*20)+10}getPos(){const start=Math.floor(Math.random()*4)+1;switch(start){case 1:this.posX=Math.floor(Math.random()*cWidth)+2;this.posY=2;break;case 2:this.posX=Math.floor(Math.random()*cWidth)+2;this.posY=cHeight-2;break;case 3:this.posX=2;this.posY=Math.floor(Math.random()*cHeight)+2;break;case 4:this.posX=cWidth-2;this.posY=Math.floor(Math.random()*cHeight)+2;break}}getSize(){return Math.floor(Math.random()*3)+1}getColor(){const colors=['#F1F1F1','#FFFFFF','#F5F5F5'];return colors[Math.floor(Math.random()*colors.length)]}setEndPoint(){this.end_direction=Math.floor(Math.random()*4)+1;switch(this.end_direction){case 1:this.path={posX:Math.floor(Math.random()*cWidth),posY:0};break;case 2:this.path={posX:Math.floor(Math.random()*cWidth),posY:cHeight};break;case 3:this.path={posX:0,posY:Math.floor(Math.random()*cHeight)};break;case 4:this.path={posX:cWidth,posY:Math.floor(Math.random()*cHeight)};break}this.incX=(Math.abs(this.posX-this.path.posX)/this.speed)/60;this.incY=(Math.abs(this.posY-this.path.posY)/this.speed)/60}setNextPos(){if(this.posX>this.path.posX){this.posX-=this.incX}else if(this.posX<this.path.posX){this.posX+=this.incX}if(this.posY<this.path.posY){this.posY+=this.incY}else if(this.posY>this.path.posY){this.posY-=this.incY}}finished(){if(this.posX>cWidth-1||this.posX<1){return true}if(this.posY>cHeight-1||this.posY<1){return true}return false}}function move(){ctx.clearRect(0,0,cWidth,cHeight);particles.forEach(particle=>{ctx.beginPath();ctx.fillStyle=particle.color;ctx.arc(particle.posX,particle.posY,particle.size,0,2*Math.PI);ctx.closePath();ctx.fill();particle.setNextPos();if(particle.finished()){particles[particle.id]=new Particle(particle.id)}})}for(let i=0;i<particle_amount;i+=1){particles.push(new Particle(i))}setInterval(move,1);